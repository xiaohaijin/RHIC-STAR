Ftf Classes seem to be the base tracking classes...

It looks like the business end of this is:


	FtfSl3 tracker;

	// setup issues 
	tracker.params.(all kinds of fields) = value;
	tracker.reset();     //?

	tracker.readSector((bankHeader *)seclp);
	tracker.processSector();

        // getting data out
	tracker.getNrTracks();
	tracker.fillHits();
	tracker.fillTracks();


Algorithm:

The conformal mapping is :

	xp = x-xt/r^2   ;   yp = y-yt/r^2

Basically you take some point and make it the origin.  Then in xp/yp it 
looks like a line.   This line is parallel to the original tangent of the
circle at this point.   The line is shifted towards center of the circle
a distance inversely proportional to the radius of the circle.

If the the origin is not exactly on the track, your straight line goes back 
to a circle.  The radius of this circle in the xp/yp coordinates is inversely
proportional to the error.  The points near the orgin are the ones that
end up on the opposite end of the circle.



l3CoordinateTransforms:

Current file:  "map.bin"
has:
	type        = 3
	header size = 11
	??          = 0
	dpad	    = 16   (npad = 182/16 = 12)
	dtb         = 16   (ntb  = 400/16 = 25)
	maxtb       = 400
	
	filesize 4,380,524 = (24*45*(12+1)*(25+1)*3*4 + 11*4)

So it looks like this "map" builds on a supergrid within the padrow
plane that is 16 x 16 pads.

float TPCmap[sector][padrow][pad_grid][timebucket_grid][3];   // gives x,y,z

The raw_to_global() function, interpolates based on the global positions on
this grid.

Why can't this be done by straight calculation?



	
L3 Banks:

DAQ, SL3 & GL3 produce different data....

Here is a map:

DATAP
   TPCP
      TPCSECP (w9) TPCSECLP
         RBCLP
            MZCLP
               MZCLD         ----> DAQ 100 Cluster data
         
   L3_P
      (  These are used in communication from Sl3-->GL3
         Not usually present in final raw data file.
         L3_SECTP               
         L3_LTD
      )

      L3_GTD                 ----> Array of tracks + vtx
      L3_SUMD                ----> Token zero only?
      SVT                    ----> ??? probably detectors usually not set...
      FTPC
      TRG
      EMC
   

Track types:

	I   --> SL3 local_track type...
	II  -->
	III -->






GL3 operations.....

processEvent()
{
	// Reads from where to where?
        // 
	// It looks like readL3Data takes a L3_P with L3_SECP
        // banks in it, and loads it into the object
        // internally, it uses
        // readSectorTracks(char *tracks);
        // where tracks = L3_SECP + L3_SECP.trap.off*4

	gl3Event::readL3Data(L3_P *);

        // vertex etc...
	gl3Event::finalizeReconstruction();

	doAlgorithms();

	
}
