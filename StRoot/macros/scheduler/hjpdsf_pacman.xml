<job name="hijing" nProcesses="1" simulateSubmission ="false">
   <command>
   <![CDATA[
    time
    # --------------------------
    #  Some user constants
    # --------------------------

    set nSimulatedEvents=5
    set ZEBRAOUTPUT=testpyth.fz
    set HIJINGOUTPUT=evgen.1.nt
    set finalDirectory=/star/data05/scratch/didenko/gridwork/hj/register


    # --------------------------

    # check which site we are working on
    set BNL=0
    set remoteNode=stargrid04.rcf.bnl.gov 

    # ---  URL: http://www-pdsf.nersc.gov/~username/   ----
    set localWebPage=~/public_html

    if ( `hostname -d` == "rcf.bnl.gov" ) then;
        set BNL=1
        set remoteNode=pdsfgrid2.nersc.gov 
        # ---  URL: http://www.rhic.bnl.gov/~username/  ----
        set localWebPage=~/WWW
    endif
    # ----  at  BNL (local node) -----
    #
    set finalNode=gsiftp://${remoteNode}

    set packageDirectory=${localWebPage}/gridwork/hj 
    set finalPackageDirectory=${finalNode}/${finalDirectory}
    set packageDirectoryBin=${packageDirectory}/bin
    set registerDirectory=${packageDirectory}/register/$REQUESTID
    set localLogFile=${registerDirectory}/$PROCESSID.html
    #
    # ----- end of the node parameteres -----
 
    # ----- The list of the application parameters  -----
    #

    set JOBSEED = $PROCESSID$REQUESTID

    #
    # -----    End of the application parameters   -----

    module load globus
# -- there is no such module yet !!!!     module load pacman
    mkdir -p ${registerDirectory}
    mkdir -p ${packageDirectoryBin}

    cd ${packageDirectoryBin}

#    -------------------------------
#    Set the proper version of STAR software release
#    -------------------------------
    globus-url-copy gsiftp://stargrid04.rcf.bnl.gov//afs/rhic.bnl.gov/star/doc/www/comp/ofl/pacman/caches/tarballs/pacman-3.13-pre-release-Jul06.tar.gz file:$SCRATCH/pacman.tar.gz
#--    wget http://www.star.bnl.gov/STAR/comp/ofl/pacman/caches/tarballs/pacman-3.13-pre-release-Jul06.tar.gz
    tar -xzf $SCRATCH/pacman.tar.gz
    rm $SCRATCH/pacman.tar.gz
    cd pacman-3.13-pre-release-Jul06
    source setup.csh
    cd ..
    pacman  -allow unsupported-platforms -trust-all-caches -get gsiftp://stargrid04.rcf.bnl.gov//afs/rhic.bnl.gov/star/doc/www/comp/ofl/pacman/caches:STARGRIDCACHES
    pacman -trust-all-caches -get STARGRID:hijing
    pacman -trust-all-caches -get STARGRID:starlib
    pacman -trust-all-caches -get STARGRID:starsim
    pwd
    source setup.csh

    cd $SCRATCH

#    -------------------------------
#    generate custom input file
#    -------------------------------
    cat >hijev.inp <<HIJPARAMETERS
'  ====================================================== '
'  =====         Hijing Control file                ===== '
'  ====================================================== '
' Events                          '  ${nSimulatedEvents}
' Frame/Energy                    '  'CMS'  62.
' Projectile  type/A/Z            '  'A'  197 79
' Target      type/Z/Z            '  'A'  197 79
' Impact parameter min/max (fm)   '  0.   20.
' Jet quenching (1=yes/0=no)      '  0
' Hard scattering/pt jet          '  0   2.0
' Max # jets per nucleon (D=10)   '  10
' Set ihpr2(11) and ihpr2(12)     '  1   1
' Set ihpr2(21) and ihpr2(18)     '  1   0
' set B production                '  1.5
' istat=1 old istat>1 new         '  2
HIJPARAMETERS

#    -------------------------------
#   start hijjet from the bin directory
#    -------------------------------
   hijjet.x
   if (! -f ${HIJINGOUTPUT}) then
      echo "hijjet.x ERROR. The output file was not created. Abort !!! "
      echo "hijjet.x ERROR. The output file was not created. Abort !!! " >>${localLogFile}
      echo "</PRE></BODY><HTML>"  >>${localLogFile}
      exit $status
   endif
#    -------------------------------
#    starting GEANT3 simulation
#    -------------------------------

#    -------------------------------
#    define the source of the GEANT geometry
#    -------------------------------
#=============  set GEOMETRYLIB=${STAR_LIB}/geometry.so
    
#    -------------------------------
#    Create GEANT3 kumac
#    -------------------------------
   set StafKumacMacroName=hijjet
    cat >${StafKumacMacroName}.kumac <<STAFKUMAC
macro ${StafKumacMacroName}
***************BEGIN OF STAF KUMAC***********************
 detp geom y2004
 gexec $STAR_LIB/geometry.so
 gexec $STAR_LIB/gstar.so
 gclose all
 vsig  0.01  60.0
 gkine -1 0 0 31 -6.3 6.3 0 6.28 -35.0 35.0
 user/input user ${HIJINGOUTPUT} 
 gfile o $ZEBRAOUTPUT
 trig ${nSimulatedEvents}
****************END OF STAF KUMAC ***********************
STAFKUMAC
 
     more ${StafKumacMacroName}.kumac>>${localLogFile}

#    -------------------------------
#    Launching GEANT3 simulation
#    -------------------------------
    starsim -w 0 -b ${StafKumacMacroName}.kumac
    time
    
      ls -l $ZEBRAOUTPUT              >>${localLogFile}
      
#    -------------------------------
#    Copy output files to the permanent place
#    -------------------------------
      
#      cp  ${HIJINGOUTPUT} $packageDirectory/evgen.$PROCESSID.nt
#      cp  $ZEBRAOUTPUT $packageDirectory/gstar.$PROCESSID.fz
               echo " Starting ${HIJINGOUTPUT} transfering to BNL" >>${localLogFile}
               echo " Starting ${HIJINGOUTPUT} transfering to BNL"
     time
               echo "Invoking: globus-job-run  ${remoteNode} /bin/mkdir -p ${finalDirectory} "

     globus-job-run  ${remoteNode} /bin/mkdir -p ${finalDirectory}

               echo "globus-job-run  ${remoteNode} /bin/mkdir -p ${finalDirectory} with $status"

     globus-url-copy -p 20 -vb  file:$SCRATCH/${HIJINGOUTPUT}    ${finalPackageDirectory}/evgen.$PROCESSID.nt

               echo " ${HIJINGOUTPUT} has been transfered  to ${finalPackageDirectory}/evgen.$PROCESSID.nt with status=$status" >>${localLogFile}
               echo " ${HIJINGOUTPUT} has been transfered  to ${finalPackageDirectory}/evgen.$PROCESSID.nt with status=$status"

     globus-job-run  ${remoteNode} /bin/ls /star/data05/scratch/didenko/gridwork/hj  >>${localLogFile}
     time
               echo "Starting $ZEBRAOUTPUT  transfering to BNL" >>${localLogFile}
               echo "Starting $ZEBRAOUTPUT  transfering to BNL"

     globus-url-copy  -p 20 -vb file:$SCRATCH/$ZEBRAOUTPUT  ${finalPackageDirectory}/gstar.$PROCESSID.fz 
     globus-job-run   ${remoteNode}  /bin/ls /star/data05/scratch/didenko/gridwork/hj  >>${localLogFile}

     time
               echo "  $ZEBRAOUTPUT has been transfered  to  ${finalPackageDirectory}/gstar.$PROCESSID.fz with status=$status" >>${localLogFile}
               echo "  $ZEBRAOUTPUT has been transfered  to  ${finalPackageDirectory}/gstar.$PROCESSID.fz  with status=$status"

      time >>${localLogFile}
 # ----
 #   close local Web page
 # ----
    echo "</PRE></BODY><HTML>"  >>${localLogFile}
   ]]>
   </command>
    <stdout URL="file:./$JOBID.out" />
    <stderr URL="file:./$JOBID.err" />
<!---
    <output fromScratch="$ZEBRAOUTPUT" >
       <copy ref="pyResult" URI="file:$packageDirectory/testpyth.$PROCESSID.fz" />
       <register ref="pyResult" URI="catalog:star.bnl.gov?att1=nt1,att2=nt2" />
    </output>
-->
</job>
