<job nProcesses="200" simulateSubmission ="false">
   <command>       
   <![CDATA[
    time

# Useful tags
    set JOBSEED = $PROCESSID$REQUESTID
    set fileID  = ${REQUESTID}_${PROCESSID}

# Preset error messages
    set hijFailMsg = 'Hijing  error: file not created. Abort.'
    set strFailMsg = 'Starsim error: file not created. Abort.'

################################################
    set nev=100
################################################


    set localHijing=1 # produce own Hijing data locally, be default
    set fz = gstar.$PROCESSID.fz

#general case:
    @ evgenID = $PROCESSID + 1
    set evgenOutput=evgen.$evgenID.nt

#if produced locally
    if ( $localHijing == 1 ) then
       set evgenOutput=evgen.1.nt
    endif



    set baseDir=/star/simu/simu/gstardata
    set finalDir=${baseDir}/gridtest_auau62_b0_3
    set jobTitle="STAR Hijing and GEANT Simulation"   


# Default to PDSF
    set BNL=0                              # a flag to check which site we are working on
    set remoteNode=stargrid03.rcf.bnl.gov  # only this node seems to respond correctly
    set localWebPage=~/public_html         # ---  URL: http://www-pdsf.nersc.gov/~username/   ----

    if ( `hostname -d` == "rcf.bnl.gov" ) then
        set BNL=1
        set remoteNode=pdsfgrid2.nersc.gov # ---  URL: http://www.rhic.bnl.gov/~username/  ----
        set localWebPage=~/WWW
    endif

    # Define the "web" directory, a container really
    set webDir=${localWebPage}/gridwork/hj 

    set webDirBin=${webDir}/bin
    set regDir=${webDir}/register/$REQUESTID
    set localLogFile=${regDir}/$PROCESSID.html

    # Final destination: final node at this point is either BNL or PDSF plus the prefix:
    set finalNode=gsiftp://${remoteNode}
    set finalPath=${finalNode}/${finalDir}

# Final file name definitions
    set finalHijing = ${finalPath}/evgen.$fileID.nt
    set finalGstar  = ${finalPath}/gstar.$fileID.fz

#    set localStorage=/aztera/rhstar/potekhin/auau200/hijing_382/b0_20
    set localStorage=/auto/pdsfdv64.2/starprod/potekhin/auau62/hijing_382/b0_3

    # load Globus on PDSF only, won't work at BNL:
    if ( ${BNL} == 0 ) then
        module load globus
    endif

    mkdir -p ${regDir}
    mkdir -p ${webDirBin}

    #--  Prepare the Web catalog:
    if ( ! -f ${regDir}/../index.html ) then
       echo "<HTML><TITLE>${jobTitle} catalog </TITLE> <BODY> <small> <code> <ul>"  >${regDir}/../index.html
    endif
    echo "<li><a href="$REQUESTID">Job: $REQUESTID `date`</a>" >> ${regDir}/../index.html
    if ( ! -f ${regDir}/index.html ) then
       echo "<HTML><TITLE>${jobTitle} $REQUESTID catalog </TITLE> <BODY> <small> <code> <ul>"  >${regDir}/index.html
    endif
    echo "<li><a href="$PROCESSID.html">Process: $PROCESSID `date` </a>" >> ${regDir}/index.html

#   Start the local Web page
    echo "<HTML><TITLE>The job   $PROCESSID.$REQUESTID has been started </TITLE> <BODY> <small> <code> <pre>"  >${localLogFile}
    cd ${webDirBin}

    stardev #    Set the proper version of STAR software release
    echo "${STAR_LIB} ${STAR_PATH}"
    set STAR_LIB=/afs/rhic.bnl.gov/star/packages/DEV/.rh80_gcc32/lib

# Build Hijing (optionally)
    if ( $localHijing == 1 ) then
      lndir $STAR/pams/gen/hijing_382 .
      make -f hijing.mk

      cd $SCRATCH # Go to the working area

# Create Hijing input file
     cat >hijev.inp <<HIJ
'  ====================================================== '   
'  =====         Hijing Control file                ===== '   
'  ====================================================== ' 
' Events                          '  ${nev}
' Frame/Energy                    '  'CMS'  62.4 
' Projectile  type/A/Z            '  'A'  197 79             
' Target      type/Z/Z            '  'A'  197 79         
' Impact parameter min/max (fm)   '  0.   3.            
' Jet quenching (1=yes/0=no)      '  0                        
' Hard scattering/pt jet          '  0   2.0                   
' Max # jets per nucleon (D=10)   '  10                        
' Set ihpr2(11) and ihpr2(12)     '  1   1
' Set ihpr2(21) and ihpr2(18)     '  1   0
' set B production                '  1.5  
' istat=1 old istat>1 new         '  2                                    
HIJ

     if (! -f hijev.inp ) then
        echo hijev failure | tee -a ${localLogFile}
        echo "</PRE></BODY><HTML>"  >>${localLogFile}
        exit -1
     endif

     time | tee -a ${localLogFile}
     echo "Launching the Hijing" | tee -a ${localLogFile}
     time | tee -a ${localLogFile}
     ${webDirBin}/hijjet.x #   start hijjet from the bin directory
     if (! -f ${evgenOutput}) then
        echo $hijFailMsg | tee -a ${localLogFile}
        echo "</PRE></BODY><HTML>"  >>${localLogFile}
        exit -1
     endif

   else
     cp ${localStorage}/${evgenOutput} $SCRATCH/${evgenOutput}
     echo Copied the Hijing file ${evgenOutput} to scratch| tee -a ${localLogFile}
   endif

   echo "Created the Hijing file" | tee -a ${localLogFile}
   ls -l ${evgenOutput} | tee -a ${localLogFile} #    register the result file for debugging
    
#  Create the Starsim kumac
     set macroName=sim
     cat >${macroName}.kumac <<HIJINGKUMAC
macro ${macroName}
*******************************************
 detp geom y2004a
 gexec $STAR_LIB/geometry.so
 gexec $STAR_LIB/gstar.so
 gclose all
 vsig  0.01  60.0
 gkine -1 0 0 31 -6.3 6.3 0 6.28 -35.0 35.0
 user/input user ${evgenOutput} 
 gfile o $fz
 trig ${nev}
*******************************************
HIJINGKUMAC
 
      time | tee -a ${localLogFile}
      echo "Launching Starsim" | tee -a ${localLogFile}
      starsim -w 0 -b ${macroName}.kumac       
      time | tee -a ${localLogFile}

      if (! -f ${fz}) then
        echo $strFailMsg | tee -a ${localLogFile}
        echo "</PRE></BODY><HTML>"  >>${localLogFile}
        exit -2
      endif
      
     echo "Created the Starsim file" | tee -a ${localLogFile}
     ls -l ${fz} | tee -a ${localLogFile} #    register the result file for debugging

# Copy output files
    if ( $BNL == 0 ) then
       time | tee -a ${localLogFile}

       echo "Starting ${evgenOutput} ==> ${finalHijing}"                 | tee -a ${localLogFile}
       globus-url-copy -p 20 -vb  file:$SCRATCH/${evgenOutput} ${finalHijing}
       cp $SCRATCH/${evgenOutput} ${localStorage}/evgen.$fileID.nt
       echo "Finished ${evgenOutput} ==> ${finalHijing}, status=$status" | tee -a ${localLogFile}

       time | tee -a ${localLogFile}

       echo "Starting ${fz} ==> $finalGstar}" | tee -a ${localLogFile}
       globus-url-copy -p 20 -vb file:$SCRATCH/$fz ${finalGstar}
       cp $SCRATCH/$fz ${localStorage}/gstar.$fileID.fz
       time | tee -a ${localLogFile}
       echo "Finished ${fz} ==> ${finalGstar}, status=$status" | tee -a ${localLogFile}
     else
       cp  $SCRATCH/${evgenOutput}                              ${finalHijing}
       cp  $fz                                                  ${finalGstar}
     endif


# close local Web page
    echo "</PRE></BODY><HTML>"  >>${localLogFile}

###################################################################
# --max-- This unfortunately does not work:
#     echo "Invoking: globus-job-run  ${remoteNode} /bin/mkdir -p ${finalDir} "
#     globus-job-run  ${remoteNode} /bin/mkdir -p ${finalDir}
#     echo "globus-job-run  ${remoteNode} /bin/mkdir -p ${finalDir} with $status"
###################################################################


   ]]>
   </command>  
    <stdout URL="file:./$JOBID.out" />
    <stderr URL="file:./$JOBID.err" />
    <!-- output fromScratch="$fz">
       <copy ref="pyResult" URI="file:$webDir/testpyth.$PROCESSID.fz" />
       <register ref="pyResult" URI="catalog:star.bnl.gov?att1=nt1,att2=nt2" />
    </output -->
</job>
