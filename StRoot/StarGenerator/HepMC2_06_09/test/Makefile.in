# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Applicable to each test program:
srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
check_PROGRAMS = testSimpleVector$(EXEEXT) testUnits$(EXEEXT) \
	testPrintBug$(EXEEXT) testHepMC$(EXEEXT) \
	testHepMCIteration$(EXEEXT) testMass$(EXEEXT) \
	testMultipleCopies$(EXEEXT) testStreamIO$(EXEEXT) \
	testFlow$(EXEEXT) testPolarization$(EXEEXT) \
	testWeights$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/testFlow.sh.in $(srcdir)/testHepMC.cc.in \
	$(srcdir)/testHepMC.sh.in $(srcdir)/testHepMCIteration.cc.in \
	$(srcdir)/testHepMCIteration.sh.in $(srcdir)/testMass.cc.in \
	$(srcdir)/testMass.sh.in $(srcdir)/testMultipleCopies.cc.in \
	$(srcdir)/testPolarization.sh.in $(srcdir)/testPrintBug.sh.in \
	$(srcdir)/testStreamIO.cc.in $(srcdir)/testStreamIO.sh.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/HepMC/defs.h
CONFIG_CLEAN_FILES = testHepMC.cc testMass.cc testHepMCIteration.cc \
	testMultipleCopies.cc testStreamIO.cc testHepMC.sh testFlow.sh \
	testMass.sh testHepMCIteration.sh testPolarization.sh \
	testPrintBug.sh testStreamIO.sh
am_testFlow_OBJECTS = testFlow.$(OBJEXT)
testFlow_OBJECTS = $(am_testFlow_OBJECTS)
testFlow_LDADD = $(LDADD)
testFlow_DEPENDENCIES = $(top_builddir)/src/libHepMC.la
am_testHepMC_OBJECTS = testHepMC.$(OBJEXT) testHepMCMethods.$(OBJEXT)
testHepMC_OBJECTS = $(am_testHepMC_OBJECTS)
testHepMC_LDADD = $(LDADD)
testHepMC_DEPENDENCIES = $(top_builddir)/src/libHepMC.la
am_testHepMCIteration_OBJECTS = testHepMCIteration.$(OBJEXT)
testHepMCIteration_OBJECTS = $(am_testHepMCIteration_OBJECTS)
testHepMCIteration_LDADD = $(LDADD)
testHepMCIteration_DEPENDENCIES = $(top_builddir)/src/libHepMC.la
am_testMass_OBJECTS = testMass.$(OBJEXT)
testMass_OBJECTS = $(am_testMass_OBJECTS)
testMass_LDADD = $(LDADD)
testMass_DEPENDENCIES = $(top_builddir)/src/libHepMC.la
am_testMultipleCopies_OBJECTS = testMultipleCopies.$(OBJEXT)
testMultipleCopies_OBJECTS = $(am_testMultipleCopies_OBJECTS)
testMultipleCopies_LDADD = $(LDADD)
testMultipleCopies_DEPENDENCIES = $(top_builddir)/src/libHepMC.la
am_testPolarization_OBJECTS = testPolarization.$(OBJEXT)
testPolarization_OBJECTS = $(am_testPolarization_OBJECTS)
testPolarization_LDADD = $(LDADD)
testPolarization_DEPENDENCIES = $(top_builddir)/src/libHepMC.la
am_testPrintBug_OBJECTS = testPrintBug.$(OBJEXT)
testPrintBug_OBJECTS = $(am_testPrintBug_OBJECTS)
testPrintBug_LDADD = $(LDADD)
testPrintBug_DEPENDENCIES = $(top_builddir)/src/libHepMC.la
am_testSimpleVector_OBJECTS = testSimpleVector.$(OBJEXT)
testSimpleVector_OBJECTS = $(am_testSimpleVector_OBJECTS)
testSimpleVector_LDADD = $(LDADD)
testSimpleVector_DEPENDENCIES = $(top_builddir)/src/libHepMC.la
am_testStreamIO_OBJECTS = testStreamIO.$(OBJEXT) \
	testHepMCMethods.$(OBJEXT)
testStreamIO_OBJECTS = $(am_testStreamIO_OBJECTS)
testStreamIO_LDADD = $(LDADD)
testStreamIO_DEPENDENCIES = $(top_builddir)/src/libHepMC.la
am_testUnits_OBJECTS = testUnits.$(OBJEXT)
testUnits_OBJECTS = $(am_testUnits_OBJECTS)
testUnits_LDADD = $(LDADD)
testUnits_DEPENDENCIES = $(top_builddir)/src/libHepMC.la
am_testWeights_OBJECTS = testWeights.$(OBJEXT)
testWeights_OBJECTS = $(am_testWeights_OBJECTS)
testWeights_LDADD = $(LDADD)
testWeights_DEPENDENCIES = $(top_builddir)/src/libHepMC.la
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/HepMC
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(testFlow_SOURCES) $(testHepMC_SOURCES) \
	$(testHepMCIteration_SOURCES) $(testMass_SOURCES) \
	$(testMultipleCopies_SOURCES) $(testPolarization_SOURCES) \
	$(testPrintBug_SOURCES) $(testSimpleVector_SOURCES) \
	$(testStreamIO_SOURCES) $(testUnits_SOURCES) \
	$(testWeights_SOURCES)
DIST_SOURCES = $(testFlow_SOURCES) $(testHepMC_SOURCES) \
	$(testHepMCIteration_SOURCES) $(testMass_SOURCES) \
	$(testMultipleCopies_SOURCES) $(testPolarization_SOURCES) \
	$(testPrintBug_SOURCES) $(testSimpleVector_SOURCES) \
	$(testStreamIO_SOURCES) $(testUnits_SOURCES) \
	$(testWeights_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_MAKEFLAGS = @AM_MAKEFLAGS@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_VISUAL_FALSE = @BUILD_VISUAL_FALSE@
BUILD_VISUAL_TRUE = @BUILD_VISUAL_TRUE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLHEPdir = @CLHEPdir@
COPY_P = @COPY_P@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DIFF_Q = @DIFF_Q@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GENSERdir = @GENSERdir@
HEPMC_DEFAULT_LEN_UNIT = @HEPMC_DEFAULT_LEN_UNIT@
HEPMC_DEFAULT_MOM_UNIT = @HEPMC_DEFAULT_MOM_UNIT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBRARY_VERSION = @LIBRARY_VERSION@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_AR = @ac_ct_AR@
ac_ct_AS = @ac_ct_AS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DLLTOOL = @ac_ct_DLLTOOL@
ac_ct_F77 = @ac_ct_F77@
ac_ct_OBJDUMP = @ac_ct_OBJDUMP@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
INCLUDES = -I$(top_builddir) -I$(top_srcdir) 
LDADD = $(top_builddir)/src/libHepMC.la
check_SCRIPTS = testHepMC.sh testHepMCIteration.sh testPrintBug.sh \
                testMass.sh testStreamIO.sh testFlow.sh testPolarization.sh


# Identify test(s) to run when 'make check' is requested:
TESTS = testSimpleVector testUnits \
        testHepMC.sh testHepMCIteration.sh testMass.sh testFlow.sh testStreamIO.sh \
        testPrintBug.sh testMultipleCopies testPolarization.sh testWeights


# Identify the test(s) for which failure is the intended outcome:
XFAIL_TESTS = 

# Identify the dependencies on a per-test basis:
testSimpleVector_SOURCES = testSimpleVector.cc
testUnits_SOURCES = testUnits.cc
testFlow_SOURCES = testFlow.cc
testPolarization_SOURCES = testPolarization.cc
testWeights_SOURCES = testWeights.cc
testHepMC_SOURCES = testHepMC.cc testHepMCMethods.cc
testMass_SOURCES = testMass.cc
testStreamIO_SOURCES = testStreamIO.cc testHepMCMethods.cc
testHepMCIteration_SOURCES = testHepMCIteration.cc
testMultipleCopies_SOURCES = testMultipleCopies.cc
testPrintBug_SOURCES = testPrintBug.cc

# Identify input data file(s) and prototype output file(s):
EXTRA_DIST = testIOGenEvent.input \
             testHepMCVarious.input \
	     testCrossSection.output \
	     testFlow.output \
             testHepMC.output \
	     testHepMCParticle.output \
             testPrintBug.output \
	     testStreamIO.output \
	     testCrossSection.dat \
	     testHepMC.dat \
	     testHepMCIteration.dat \
	     testMass1.dat \
	     testStreamIOVarious.dat


# Identify generated file(s) to be removed when 'make clean' is requested:
CLEANFILES = testHepMC.cout testStreamIO.cout \
             testHepMCIteration.cout \
	     testHepMCIteration.out testHepMCIteration2.out testHepMCIteration3.out \
             testHepMC.out testHepMCParticle.out \
             testPrintBug.out testMass.out testNaN.out \
	     testAscii.out testHepMCprecision.out \
             testMass.cout testMass1.out testMass2.out \
	     testHepMCVarious.cout testHepMCVarious.out testIOAscii.out \
	     testMultipleCopies.out \
	     testMultipleCopies1.out testMultipleCopies2.out \
	     testMultipleOriginals.out testUnits.out \
	     testCrossSection.out testCrossSection2.out testCrossSection.cout \
	     testStreamIO.out testStreamIOParticle.out testStreamIOVarious.out \
	     testStreamIO2.out testStreamIO3.out testStreamIO4.out \
	     testStreamIOprecision.out testStreamIO.cout testStreamIOVarious.cout \
	     testFlow.out testFlow.out1 testFlow.out2 testFlow.out3 testFlow.out4 testFlow.out5 \
	     testPolarization.cout testPolarization1.dat testPolarization2.dat \
	     testPolarization4.out testPolarization5.out \
	     testWithWeight.cout testWithWeight.out testWithWeight2.out

all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  test/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
testHepMC.cc: $(top_builddir)/config.status $(srcdir)/testHepMC.cc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
testMass.cc: $(top_builddir)/config.status $(srcdir)/testMass.cc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
testHepMCIteration.cc: $(top_builddir)/config.status $(srcdir)/testHepMCIteration.cc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
testMultipleCopies.cc: $(top_builddir)/config.status $(srcdir)/testMultipleCopies.cc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
testStreamIO.cc: $(top_builddir)/config.status $(srcdir)/testStreamIO.cc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
testHepMC.sh: $(top_builddir)/config.status $(srcdir)/testHepMC.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
testFlow.sh: $(top_builddir)/config.status $(srcdir)/testFlow.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
testMass.sh: $(top_builddir)/config.status $(srcdir)/testMass.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
testHepMCIteration.sh: $(top_builddir)/config.status $(srcdir)/testHepMCIteration.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
testPolarization.sh: $(top_builddir)/config.status $(srcdir)/testPolarization.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
testPrintBug.sh: $(top_builddir)/config.status $(srcdir)/testPrintBug.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
testStreamIO.sh: $(top_builddir)/config.status $(srcdir)/testStreamIO.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
testFlow$(EXEEXT): $(testFlow_OBJECTS) $(testFlow_DEPENDENCIES) 
	@rm -f testFlow$(EXEEXT)
	$(CXXLINK) $(testFlow_LDFLAGS) $(testFlow_OBJECTS) $(testFlow_LDADD) $(LIBS)
testHepMC$(EXEEXT): $(testHepMC_OBJECTS) $(testHepMC_DEPENDENCIES) 
	@rm -f testHepMC$(EXEEXT)
	$(CXXLINK) $(testHepMC_LDFLAGS) $(testHepMC_OBJECTS) $(testHepMC_LDADD) $(LIBS)
testHepMCIteration$(EXEEXT): $(testHepMCIteration_OBJECTS) $(testHepMCIteration_DEPENDENCIES) 
	@rm -f testHepMCIteration$(EXEEXT)
	$(CXXLINK) $(testHepMCIteration_LDFLAGS) $(testHepMCIteration_OBJECTS) $(testHepMCIteration_LDADD) $(LIBS)
testMass$(EXEEXT): $(testMass_OBJECTS) $(testMass_DEPENDENCIES) 
	@rm -f testMass$(EXEEXT)
	$(CXXLINK) $(testMass_LDFLAGS) $(testMass_OBJECTS) $(testMass_LDADD) $(LIBS)
testMultipleCopies$(EXEEXT): $(testMultipleCopies_OBJECTS) $(testMultipleCopies_DEPENDENCIES) 
	@rm -f testMultipleCopies$(EXEEXT)
	$(CXXLINK) $(testMultipleCopies_LDFLAGS) $(testMultipleCopies_OBJECTS) $(testMultipleCopies_LDADD) $(LIBS)
testPolarization$(EXEEXT): $(testPolarization_OBJECTS) $(testPolarization_DEPENDENCIES) 
	@rm -f testPolarization$(EXEEXT)
	$(CXXLINK) $(testPolarization_LDFLAGS) $(testPolarization_OBJECTS) $(testPolarization_LDADD) $(LIBS)
testPrintBug$(EXEEXT): $(testPrintBug_OBJECTS) $(testPrintBug_DEPENDENCIES) 
	@rm -f testPrintBug$(EXEEXT)
	$(CXXLINK) $(testPrintBug_LDFLAGS) $(testPrintBug_OBJECTS) $(testPrintBug_LDADD) $(LIBS)
testSimpleVector$(EXEEXT): $(testSimpleVector_OBJECTS) $(testSimpleVector_DEPENDENCIES) 
	@rm -f testSimpleVector$(EXEEXT)
	$(CXXLINK) $(testSimpleVector_LDFLAGS) $(testSimpleVector_OBJECTS) $(testSimpleVector_LDADD) $(LIBS)
testStreamIO$(EXEEXT): $(testStreamIO_OBJECTS) $(testStreamIO_DEPENDENCIES) 
	@rm -f testStreamIO$(EXEEXT)
	$(CXXLINK) $(testStreamIO_LDFLAGS) $(testStreamIO_OBJECTS) $(testStreamIO_LDADD) $(LIBS)
testUnits$(EXEEXT): $(testUnits_OBJECTS) $(testUnits_DEPENDENCIES) 
	@rm -f testUnits$(EXEEXT)
	$(CXXLINK) $(testUnits_LDFLAGS) $(testUnits_OBJECTS) $(testUnits_LDADD) $(LIBS)
testWeights$(EXEEXT): $(testWeights_OBJECTS) $(testWeights_DEPENDENCIES) 
	@rm -f testWeights$(EXEEXT)
	$(CXXLINK) $(testWeights_LDFLAGS) $(testWeights_OBJECTS) $(testWeights_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testFlow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testHepMC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testHepMCIteration.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testHepMCMethods.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testMass.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testMultipleCopies.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testPolarization.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testPrintBug.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testSimpleVector.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testStreamIO.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testUnits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testWeights.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
